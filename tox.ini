# Tox (https://tox.readthedocs.io/en/latest/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
isolated_build=true
envlist = lint,docs,py
skipsdist = true

[testenv]
# TODO: Consider refactoring the tests to not require the aggregation script
# being invoked from the `tests` directory. This seems to be the convention and
# would make use of other testing tools such as coverage/coveralls easier.
changedir = tests

commands =
    python3 --version
    python3 -m coverage run aggregate_tests.py
    python3 -m coverage report -m --fail-under 97

deps =
    -r{toxinidir}/requirements-test.txt
    # Install TUF in editable mode, instead of tox default virtual environment
    # installation (see `skipsdist`), to get relative paths in coverage reports
    --editable {toxinidir}

install_command = python3 -m pip install {opts} {packages}

# Develop test env to run tests against securesystemslib's master branch
# Must to be invoked explicitly with, e.g. `tox -e with-sslib-master`
[testenv:with-sslib-master]
commands_pre =
    python3 -m pip install --force-reinstall git+https://github.com/secure-systems-lab/securesystemslib.git@master#egg=securesystemslib[crypto,pynacl]

commands =
    python3 -m coverage run aggregate_tests.py
    python3 -m coverage report -m

[testenv:lint]
changedir = {toxinidir}
lint_dirs = tuf examples tests verify_release
commands =
    black --check --diff {[testenv:lint]lint_dirs}
    isort --check --diff {[testenv:lint]lint_dirs}
    pylint -j 0 --rcfile=pyproject.toml {[testenv:lint]lint_dirs}

    mypy {[testenv:lint]lint_dirs}

    bandit -r tuf

[testenv:docs]
deps =
    -r{toxinidir}/requirements-docs.txt

changedir = {toxinidir}
commands =
    sphinx-build -b html docs docs/build/html -W
